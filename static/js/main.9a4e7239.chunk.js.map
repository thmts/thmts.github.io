{"version":3,"sources":["About.js","Home.js","Learning.js","Navigation.js","Projects.js","App.js","reportWebVitals.js","index.js"],"names":["About","SimpleUpdatePoc","content","useRef","useState","a","setA","b","setB","useEffect","current","innerHTML","ref","onClick","_","Home","channels","id","link","title","sites","Web","map","e","href","Learning","Navigation","className","to","topics","puzzle","Projects","App","component","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sPAEe,SAASA,IACpB,OAAO,8BACH,sD,iBCAR,SAASC,IACL,IAAMC,EAAUC,iBAAQ,IACxB,EAAkBC,mBAAU,GAA5B,mBAAOC,EAAP,KAAUC,EAAV,KACA,EAAkBF,mBAAU,GAA5B,mBAAOG,EAAP,KAAUC,EAAV,KAMA,OAJAC,qBAAW,WACPP,EAAQQ,QAAQC,UAAhB,4BAAiDN,EAAjD,kCAA4EE,KAC7E,CAACF,EAAEE,IAEC,gCACH,4DACA,gCACI,4bAKA,mBAAGK,IAAKV,IACR,wBAAQW,QAAS,WAAQP,GAAM,SAAAD,GAAC,OAAIA,EAAG,KAAIG,GAAM,SAAAD,GAAC,OAAGA,EAAE,MAAvD,sBACA,wBAAQM,QAAS,WAAQP,GAAM,SAAAQ,GAAC,OAAIP,EAAG,MAAKC,GAAM,SAAAM,GAAC,OAAGT,EAAE,OAAxD,oCAMG,SAASU,IAGpB,OAAO,gCACH,sCACA,cAACd,EAAD,OChCR,IAAMe,EAAW,CACb,CAACC,GAAG,EAAGC,KAAK,2DAA4DC,MAAM,8BAC9E,CAACF,GAAG,EAAGC,KAAK,2DAA4DC,MAAM,WAG5EC,EAAQ,CACV,CAACH,GAAG,EAAGC,KAAK,6CAA8CC,MAAM,aAChE,CAACF,GAAG,EAAGC,KAAK,uCAAwCC,MAAM,QAG9D,SAASE,IACL,OAAO,gCACH,gCACA,4CACI,6BACKL,EAASM,KAAK,SAACC,GAAD,OAAK,+BAAe,oBAAGC,KAAMD,EAAEL,KAAX,cAAmBK,EAAEJ,SAApC,MAASI,EAAEN,YAGvC,gCACA,yCACI,6BACKG,EAAME,KAAK,SAACC,GAAD,OAAK,6BAAe,oBAAGC,KAAMD,EAAEL,KAAX,UAAkBK,EAAEJ,MAApB,QAANI,EAAEN,eAO7B,SAASQ,IACpB,OAAO,8BACH,cAACJ,EAAD,M,MC3BO,SAASK,IACpB,OAAO,gCACH,+CACA,cAAC,IAAD,CAAMC,UAAU,WAAWC,GAAG,IAA9B,mBACA,cAAC,IAAD,CAAMD,UAAU,WAAWC,GAAG,YAA9B,uBACA,cAAC,IAAD,CAAMD,UAAU,WAAWC,GAAG,YAA9B,uBACA,cAAC,IAAD,CAAMD,UAAU,WAAWC,GAAG,SAA9B,uB,MCPR,IAAMC,EAAS,CACX,aACA,aACA,mBACA,6BAGEC,EAAS,CACX,0BACA,UACA,8BAmBW,SAASC,IAEpB,OAZaF,EAAOP,KAAK,SAAAC,GAAC,OAAI,6BAAaA,GAAJA,MAI1BO,EAAOR,KAAK,SAAAC,GAAC,OAAI,6BAAaA,GAAJA,MAQhC,8BAAK,0CAER,mBAAGC,KAAK,gBAAR,2CCdOQ,MAdf,WACE,OACI,eAAC,IAAD,WACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,UAAWjC,EAAOkC,KAAK,WAC9B,cAAC,IAAD,CAAOD,UAAWR,EAAUS,KAAK,cACjC,cAAC,IAAD,CAAOD,UAAWF,EAAUG,KAAK,cACjC,cAAC,IAAD,CAAOD,UAAWlB,EAAMmB,KAAK,aCLxBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.9a4e7239.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function About () {\r\n    return <div>\r\n        <h1>About this website</h1>\r\n    </div>\r\n}","import React, {useState, useRef, useEffect} from 'react'\r\n\r\nimport Tsp from './tsp/Tsp'\r\n\r\nfunction SimpleUpdatePoc () {\r\n    const content = useRef ('');\r\n    const [a, setA] = useState (0);\r\n    const [b, setB] = useState (0);\r\n\r\n    useEffect (() => {\r\n        content.current.innerHTML = `The count of A is ${a} and the count of B is ${b}`\r\n    }, [a,b])\r\n\r\n    return <div>\r\n        <h2>Playing with state changes</h2>\r\n        <div>\r\n            <p>We have two counts A and B namely that can be updated via two buttons.\r\n                The first button will increment both counts by one, each state incrementing itself from its previous value.\r\n                The first button will increment both counts by ten, each state incrementing itself from its neighboor previous value.\r\n                The expected behavior is that both states have the same values at all time with the button sequence not mattering.\r\n            </p>\r\n            <p ref={content} />\r\n            <button onClick={() => { setA (a => a +1); setB (b=> b+1); }}> By one </button>\r\n            <button onClick={() => { setA (_ => b +10); setB (_=> a+10); }}> By ten crossed </button>\r\n        </div>\r\n\r\n    </div>\r\n}\r\n\r\nexport default function Home () {\r\n\r\n    <Tsp />\r\n    return <div>\r\n        <h1>Home</h1>\r\n        <SimpleUpdatePoc />\r\n        </div>\r\n}","import React from 'react'\r\n\r\nconst channels = [ \r\n    {id:1, link:'https://www.youtube.com/channel/UCFbNIlppjAuEX4znoulh0Cw', title:'Web Development Simplified' },\r\n    {id:2, link:'https://www.youtube.com/channel/UClb90NQQcskPUGDIXsQEz5Q', title:'Dev Ed' },\r\n]\r\n\r\nconst sites = [ \r\n    {id:1, link:'https://www.w3schools.com/html/default.asp', title:'W3Schools' },\r\n    {id:2, link:'https://developer.mozilla.org/en-US/', title:'MDN' },\r\n]\r\n\r\nfunction Web () {\r\n    return <div>\r\n        <div>\r\n        <h2> Channels </h2>\r\n            <ul>\r\n                {channels.map ((e)=><li key={e.id}><a href={e.link}> {e.title}</a> </li> ) }\r\n            </ul>\r\n        </div>\r\n        <div>\r\n        <h2> Sites </h2>\r\n            <ul>\r\n                {sites.map ((e)=><li key={e.id}><a href={e.link}>{e.title} </a></li> ) }\r\n            </ul>\r\n        </div>\r\n\r\n    </div>\r\n}\r\n\r\nexport default function Learning () {\r\n    return <div>\r\n        <Web />\r\n    </div>\r\n}\r\n","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nimport './Navigation.css'\r\n\r\nexport default function Navigation () {\r\n    return <nav>\r\n        <label>Web corner</label>\r\n        <Link className='nav-link' to=\"/\">Home </Link>\r\n        <Link className='nav-link' to=\"/learning\">Learning </Link>\r\n        <Link className='nav-link' to=\"/projects\">Projects </Link>\r\n        <Link className='nav-link' to=\"/about\">About </Link>\r\n    </nav>\r\n}","import React from 'react'\r\nimport Calculator from './Calculator'\r\n\r\n\r\nconst topics = [\r\n    \"versioning\",\r\n    \"Monitoring\",\r\n    \"Project tracking\",\r\n    \"Automatic differenciation\",\r\n]\r\n\r\nconst puzzle = [\r\n    \"Color point connections\",\r\n    \"Reversi\",\r\n    \"Traveling Salesman Problem\"\r\n]\r\n\r\nconst todos = () => {\r\n        return <div>\r\n        <Calculator />\r\n        <div>\r\n            <div>Topics</div>\r\n            <ul>\r\n                {topics.map (e => <li key={e}>{e}</li>)}\r\n            </ul>\r\n            <div>Puzzles </div>\r\n            <ul>\r\n                {puzzle.map (e => <li key={e}>{e}</li>)}\r\n            </ul>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default function Projects () {\r\n    todos ();//to display\r\n    return <div><h1>\r\n        Projects\r\n        <a href='/attempt.html'> Towards a static page. </a>\r\n    </h1>\r\n    </div>\r\n}\r\n","import React  from 'react'\nimport {HashRouter as Router,  Route, Switch} from 'react-router-dom'\n\nimport About from './About'\nimport Home from './Home'\nimport Learning from './Learning'\nimport Navigation from './Navigation'\nimport Projects from './Projects'\n\nfunction App() {\n  return (\n      <Router>\n        <Navigation />\n        <Switch>\n          <Route component={About} path=\"/about\"/>\n          <Route component={Learning} path=\"/learning\"/>\n          <Route component={Projects} path=\"/projects\"/>\n          <Route component={Home} path=\"/\"/>\n        </Switch>\n      </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}